def get_model():
    import numpy as np
    import torch
    import torch.nn as nn
    import torch.nn.functional as F

    _weights_dict = dict()

    def load_weights(weight_file):
        if weight_file == None:
            return

        try:
            weights_dict = np.load(weight_file, allow_pickle=True).item()
        except:
            weights_dict = np.load(weight_file, allow_pickle=True, encoding='bytes').item()

        return weights_dict

    class KitModel(nn.Module):
        def __init__(self, num_output):
            super(KitModel, self).__init__()
            global _weights_dict
            _weights_dict = None
            # _weights_dict = load_weights(weight_file)
            
            self.conv1_conv = self.__conv(2, name='conv1/conv', in_channels=3, out_channels=64, kernel_size=(7, 7), stride=(2, 2), groups=1, bias=False)
            self.conv1_bn = self.__batch_normalization(2, 'conv1/bn', num_features=64, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block1_0_bn = self.__batch_normalization(2, 'conv2_block1_0_bn', num_features=64, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block1_1_conv = self.__conv(2, name='conv2_block1_1_conv', in_channels=64, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv2_block1_1_bn = self.__batch_normalization(2, 'conv2_block1_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block1_2_conv = self.__conv(2, name='conv2_block1_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv2_block2_0_bn = self.__batch_normalization(2, 'conv2_block2_0_bn', num_features=96, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block2_1_conv = self.__conv(2, name='conv2_block2_1_conv', in_channels=96, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv2_block2_1_bn = self.__batch_normalization(2, 'conv2_block2_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block2_2_conv = self.__conv(2, name='conv2_block2_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv2_block3_0_bn = self.__batch_normalization(2, 'conv2_block3_0_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block3_1_conv = self.__conv(2, name='conv2_block3_1_conv', in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv2_block3_1_bn = self.__batch_normalization(2, 'conv2_block3_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block3_2_conv = self.__conv(2, name='conv2_block3_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv2_block4_0_bn = self.__batch_normalization(2, 'conv2_block4_0_bn', num_features=160, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block4_1_conv = self.__conv(2, name='conv2_block4_1_conv', in_channels=160, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv2_block4_1_bn = self.__batch_normalization(2, 'conv2_block4_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block4_2_conv = self.__conv(2, name='conv2_block4_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv2_block5_0_bn = self.__batch_normalization(2, 'conv2_block5_0_bn', num_features=192, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block5_1_conv = self.__conv(2, name='conv2_block5_1_conv', in_channels=192, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv2_block5_1_bn = self.__batch_normalization(2, 'conv2_block5_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block5_2_conv = self.__conv(2, name='conv2_block5_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv2_block6_0_bn = self.__batch_normalization(2, 'conv2_block6_0_bn', num_features=224, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block6_1_conv = self.__conv(2, name='conv2_block6_1_conv', in_channels=224, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv2_block6_1_bn = self.__batch_normalization(2, 'conv2_block6_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv2_block6_2_conv = self.__conv(2, name='conv2_block6_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.pool2_bn = self.__batch_normalization(2, 'pool2_bn', num_features=256, eps=1.0009999641624745e-05, momentum=0.0)
            self.pool2_conv = self.__conv(2, name='pool2_conv', in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block1_0_bn = self.__batch_normalization(2, 'conv3_block1_0_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block1_1_conv = self.__conv(2, name='conv3_block1_1_conv', in_channels=128, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block1_1_bn = self.__batch_normalization(2, 'conv3_block1_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block1_2_conv = self.__conv(2, name='conv3_block1_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block2_0_bn = self.__batch_normalization(2, 'conv3_block2_0_bn', num_features=160, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block2_1_conv = self.__conv(2, name='conv3_block2_1_conv', in_channels=160, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block2_1_bn = self.__batch_normalization(2, 'conv3_block2_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block2_2_conv = self.__conv(2, name='conv3_block2_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block3_0_bn = self.__batch_normalization(2, 'conv3_block3_0_bn', num_features=192, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block3_1_conv = self.__conv(2, name='conv3_block3_1_conv', in_channels=192, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block3_1_bn = self.__batch_normalization(2, 'conv3_block3_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block3_2_conv = self.__conv(2, name='conv3_block3_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block4_0_bn = self.__batch_normalization(2, 'conv3_block4_0_bn', num_features=224, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block4_1_conv = self.__conv(2, name='conv3_block4_1_conv', in_channels=224, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block4_1_bn = self.__batch_normalization(2, 'conv3_block4_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block4_2_conv = self.__conv(2, name='conv3_block4_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block5_0_bn = self.__batch_normalization(2, 'conv3_block5_0_bn', num_features=256, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block5_1_conv = self.__conv(2, name='conv3_block5_1_conv', in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block5_1_bn = self.__batch_normalization(2, 'conv3_block5_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block5_2_conv = self.__conv(2, name='conv3_block5_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block6_0_bn = self.__batch_normalization(2, 'conv3_block6_0_bn', num_features=288, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block6_1_conv = self.__conv(2, name='conv3_block6_1_conv', in_channels=288, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block6_1_bn = self.__batch_normalization(2, 'conv3_block6_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block6_2_conv = self.__conv(2, name='conv3_block6_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block7_0_bn = self.__batch_normalization(2, 'conv3_block7_0_bn', num_features=320, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block7_1_conv = self.__conv(2, name='conv3_block7_1_conv', in_channels=320, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block7_1_bn = self.__batch_normalization(2, 'conv3_block7_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block7_2_conv = self.__conv(2, name='conv3_block7_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block8_0_bn = self.__batch_normalization(2, 'conv3_block8_0_bn', num_features=352, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block8_1_conv = self.__conv(2, name='conv3_block8_1_conv', in_channels=352, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block8_1_bn = self.__batch_normalization(2, 'conv3_block8_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block8_2_conv = self.__conv(2, name='conv3_block8_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block9_0_bn = self.__batch_normalization(2, 'conv3_block9_0_bn', num_features=384, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block9_1_conv = self.__conv(2, name='conv3_block9_1_conv', in_channels=384, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block9_1_bn = self.__batch_normalization(2, 'conv3_block9_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block9_2_conv = self.__conv(2, name='conv3_block9_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block10_0_bn = self.__batch_normalization(2, 'conv3_block10_0_bn', num_features=416, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block10_1_conv = self.__conv(2, name='conv3_block10_1_conv', in_channels=416, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block10_1_bn = self.__batch_normalization(2, 'conv3_block10_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block10_2_conv = self.__conv(2, name='conv3_block10_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block11_0_bn = self.__batch_normalization(2, 'conv3_block11_0_bn', num_features=448, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block11_1_conv = self.__conv(2, name='conv3_block11_1_conv', in_channels=448, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block11_1_bn = self.__batch_normalization(2, 'conv3_block11_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block11_2_conv = self.__conv(2, name='conv3_block11_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv3_block12_0_bn = self.__batch_normalization(2, 'conv3_block12_0_bn', num_features=480, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block12_1_conv = self.__conv(2, name='conv3_block12_1_conv', in_channels=480, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv3_block12_1_bn = self.__batch_normalization(2, 'conv3_block12_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv3_block12_2_conv = self.__conv(2, name='conv3_block12_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.pool3_bn = self.__batch_normalization(2, 'pool3_bn', num_features=512, eps=1.0009999641624745e-05, momentum=0.0)
            self.pool3_conv = self.__conv(2, name='pool3_conv', in_channels=512, out_channels=256, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block1_0_bn = self.__batch_normalization(2, 'conv4_block1_0_bn', num_features=256, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block1_1_conv = self.__conv(2, name='conv4_block1_1_conv', in_channels=256, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block1_1_bn = self.__batch_normalization(2, 'conv4_block1_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block1_2_conv = self.__conv(2, name='conv4_block1_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block2_0_bn = self.__batch_normalization(2, 'conv4_block2_0_bn', num_features=288, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block2_1_conv = self.__conv(2, name='conv4_block2_1_conv', in_channels=288, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block2_1_bn = self.__batch_normalization(2, 'conv4_block2_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block2_2_conv = self.__conv(2, name='conv4_block2_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block3_0_bn = self.__batch_normalization(2, 'conv4_block3_0_bn', num_features=320, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block3_1_conv = self.__conv(2, name='conv4_block3_1_conv', in_channels=320, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block3_1_bn = self.__batch_normalization(2, 'conv4_block3_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block3_2_conv = self.__conv(2, name='conv4_block3_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block4_0_bn = self.__batch_normalization(2, 'conv4_block4_0_bn', num_features=352, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block4_1_conv = self.__conv(2, name='conv4_block4_1_conv', in_channels=352, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block4_1_bn = self.__batch_normalization(2, 'conv4_block4_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block4_2_conv = self.__conv(2, name='conv4_block4_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block5_0_bn = self.__batch_normalization(2, 'conv4_block5_0_bn', num_features=384, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block5_1_conv = self.__conv(2, name='conv4_block5_1_conv', in_channels=384, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block5_1_bn = self.__batch_normalization(2, 'conv4_block5_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block5_2_conv = self.__conv(2, name='conv4_block5_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block6_0_bn = self.__batch_normalization(2, 'conv4_block6_0_bn', num_features=416, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block6_1_conv = self.__conv(2, name='conv4_block6_1_conv', in_channels=416, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block6_1_bn = self.__batch_normalization(2, 'conv4_block6_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block6_2_conv = self.__conv(2, name='conv4_block6_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block7_0_bn = self.__batch_normalization(2, 'conv4_block7_0_bn', num_features=448, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block7_1_conv = self.__conv(2, name='conv4_block7_1_conv', in_channels=448, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block7_1_bn = self.__batch_normalization(2, 'conv4_block7_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block7_2_conv = self.__conv(2, name='conv4_block7_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block8_0_bn = self.__batch_normalization(2, 'conv4_block8_0_bn', num_features=480, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block8_1_conv = self.__conv(2, name='conv4_block8_1_conv', in_channels=480, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block8_1_bn = self.__batch_normalization(2, 'conv4_block8_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block8_2_conv = self.__conv(2, name='conv4_block8_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block9_0_bn = self.__batch_normalization(2, 'conv4_block9_0_bn', num_features=512, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block9_1_conv = self.__conv(2, name='conv4_block9_1_conv', in_channels=512, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block9_1_bn = self.__batch_normalization(2, 'conv4_block9_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block9_2_conv = self.__conv(2, name='conv4_block9_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block10_0_bn = self.__batch_normalization(2, 'conv4_block10_0_bn', num_features=544, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block10_1_conv = self.__conv(2, name='conv4_block10_1_conv', in_channels=544, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block10_1_bn = self.__batch_normalization(2, 'conv4_block10_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block10_2_conv = self.__conv(2, name='conv4_block10_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block11_0_bn = self.__batch_normalization(2, 'conv4_block11_0_bn', num_features=576, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block11_1_conv = self.__conv(2, name='conv4_block11_1_conv', in_channels=576, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block11_1_bn = self.__batch_normalization(2, 'conv4_block11_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block11_2_conv = self.__conv(2, name='conv4_block11_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block12_0_bn = self.__batch_normalization(2, 'conv4_block12_0_bn', num_features=608, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block12_1_conv = self.__conv(2, name='conv4_block12_1_conv', in_channels=608, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block12_1_bn = self.__batch_normalization(2, 'conv4_block12_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block12_2_conv = self.__conv(2, name='conv4_block12_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block13_0_bn = self.__batch_normalization(2, 'conv4_block13_0_bn', num_features=640, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block13_1_conv = self.__conv(2, name='conv4_block13_1_conv', in_channels=640, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block13_1_bn = self.__batch_normalization(2, 'conv4_block13_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block13_2_conv = self.__conv(2, name='conv4_block13_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block14_0_bn = self.__batch_normalization(2, 'conv4_block14_0_bn', num_features=672, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block14_1_conv = self.__conv(2, name='conv4_block14_1_conv', in_channels=672, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block14_1_bn = self.__batch_normalization(2, 'conv4_block14_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block14_2_conv = self.__conv(2, name='conv4_block14_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block15_0_bn = self.__batch_normalization(2, 'conv4_block15_0_bn', num_features=704, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block15_1_conv = self.__conv(2, name='conv4_block15_1_conv', in_channels=704, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block15_1_bn = self.__batch_normalization(2, 'conv4_block15_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block15_2_conv = self.__conv(2, name='conv4_block15_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block16_0_bn = self.__batch_normalization(2, 'conv4_block16_0_bn', num_features=736, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block16_1_conv = self.__conv(2, name='conv4_block16_1_conv', in_channels=736, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block16_1_bn = self.__batch_normalization(2, 'conv4_block16_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block16_2_conv = self.__conv(2, name='conv4_block16_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block17_0_bn = self.__batch_normalization(2, 'conv4_block17_0_bn', num_features=768, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block17_1_conv = self.__conv(2, name='conv4_block17_1_conv', in_channels=768, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block17_1_bn = self.__batch_normalization(2, 'conv4_block17_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block17_2_conv = self.__conv(2, name='conv4_block17_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block18_0_bn = self.__batch_normalization(2, 'conv4_block18_0_bn', num_features=800, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block18_1_conv = self.__conv(2, name='conv4_block18_1_conv', in_channels=800, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block18_1_bn = self.__batch_normalization(2, 'conv4_block18_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block18_2_conv = self.__conv(2, name='conv4_block18_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block19_0_bn = self.__batch_normalization(2, 'conv4_block19_0_bn', num_features=832, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block19_1_conv = self.__conv(2, name='conv4_block19_1_conv', in_channels=832, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block19_1_bn = self.__batch_normalization(2, 'conv4_block19_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block19_2_conv = self.__conv(2, name='conv4_block19_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block20_0_bn = self.__batch_normalization(2, 'conv4_block20_0_bn', num_features=864, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block20_1_conv = self.__conv(2, name='conv4_block20_1_conv', in_channels=864, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block20_1_bn = self.__batch_normalization(2, 'conv4_block20_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block20_2_conv = self.__conv(2, name='conv4_block20_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block21_0_bn = self.__batch_normalization(2, 'conv4_block21_0_bn', num_features=896, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block21_1_conv = self.__conv(2, name='conv4_block21_1_conv', in_channels=896, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block21_1_bn = self.__batch_normalization(2, 'conv4_block21_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block21_2_conv = self.__conv(2, name='conv4_block21_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block22_0_bn = self.__batch_normalization(2, 'conv4_block22_0_bn', num_features=928, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block22_1_conv = self.__conv(2, name='conv4_block22_1_conv', in_channels=928, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block22_1_bn = self.__batch_normalization(2, 'conv4_block22_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block22_2_conv = self.__conv(2, name='conv4_block22_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block23_0_bn = self.__batch_normalization(2, 'conv4_block23_0_bn', num_features=960, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block23_1_conv = self.__conv(2, name='conv4_block23_1_conv', in_channels=960, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block23_1_bn = self.__batch_normalization(2, 'conv4_block23_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block23_2_conv = self.__conv(2, name='conv4_block23_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv4_block24_0_bn = self.__batch_normalization(2, 'conv4_block24_0_bn', num_features=992, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block24_1_conv = self.__conv(2, name='conv4_block24_1_conv', in_channels=992, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv4_block24_1_bn = self.__batch_normalization(2, 'conv4_block24_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv4_block24_2_conv = self.__conv(2, name='conv4_block24_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.pool4_bn = self.__batch_normalization(2, 'pool4_bn', num_features=1024, eps=1.0009999641624745e-05, momentum=0.0)
            self.pool4_conv = self.__conv(2, name='pool4_conv', in_channels=1024, out_channels=512, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block1_0_bn = self.__batch_normalization(2, 'conv5_block1_0_bn', num_features=512, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block1_1_conv = self.__conv(2, name='conv5_block1_1_conv', in_channels=512, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block1_1_bn = self.__batch_normalization(2, 'conv5_block1_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block1_2_conv = self.__conv(2, name='conv5_block1_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block2_0_bn = self.__batch_normalization(2, 'conv5_block2_0_bn', num_features=544, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block2_1_conv = self.__conv(2, name='conv5_block2_1_conv', in_channels=544, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block2_1_bn = self.__batch_normalization(2, 'conv5_block2_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block2_2_conv = self.__conv(2, name='conv5_block2_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block3_0_bn = self.__batch_normalization(2, 'conv5_block3_0_bn', num_features=576, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block3_1_conv = self.__conv(2, name='conv5_block3_1_conv', in_channels=576, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block3_1_bn = self.__batch_normalization(2, 'conv5_block3_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block3_2_conv = self.__conv(2, name='conv5_block3_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block4_0_bn = self.__batch_normalization(2, 'conv5_block4_0_bn', num_features=608, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block4_1_conv = self.__conv(2, name='conv5_block4_1_conv', in_channels=608, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block4_1_bn = self.__batch_normalization(2, 'conv5_block4_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block4_2_conv = self.__conv(2, name='conv5_block4_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block5_0_bn = self.__batch_normalization(2, 'conv5_block5_0_bn', num_features=640, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block5_1_conv = self.__conv(2, name='conv5_block5_1_conv', in_channels=640, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block5_1_bn = self.__batch_normalization(2, 'conv5_block5_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block5_2_conv = self.__conv(2, name='conv5_block5_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block6_0_bn = self.__batch_normalization(2, 'conv5_block6_0_bn', num_features=672, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block6_1_conv = self.__conv(2, name='conv5_block6_1_conv', in_channels=672, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block6_1_bn = self.__batch_normalization(2, 'conv5_block6_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block6_2_conv = self.__conv(2, name='conv5_block6_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block7_0_bn = self.__batch_normalization(2, 'conv5_block7_0_bn', num_features=704, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block7_1_conv = self.__conv(2, name='conv5_block7_1_conv', in_channels=704, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block7_1_bn = self.__batch_normalization(2, 'conv5_block7_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block7_2_conv = self.__conv(2, name='conv5_block7_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block8_0_bn = self.__batch_normalization(2, 'conv5_block8_0_bn', num_features=736, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block8_1_conv = self.__conv(2, name='conv5_block8_1_conv', in_channels=736, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block8_1_bn = self.__batch_normalization(2, 'conv5_block8_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block8_2_conv = self.__conv(2, name='conv5_block8_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block9_0_bn = self.__batch_normalization(2, 'conv5_block9_0_bn', num_features=768, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block9_1_conv = self.__conv(2, name='conv5_block9_1_conv', in_channels=768, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block9_1_bn = self.__batch_normalization(2, 'conv5_block9_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block9_2_conv = self.__conv(2, name='conv5_block9_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block10_0_bn = self.__batch_normalization(2, 'conv5_block10_0_bn', num_features=800, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block10_1_conv = self.__conv(2, name='conv5_block10_1_conv', in_channels=800, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block10_1_bn = self.__batch_normalization(2, 'conv5_block10_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block10_2_conv = self.__conv(2, name='conv5_block10_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block11_0_bn = self.__batch_normalization(2, 'conv5_block11_0_bn', num_features=832, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block11_1_conv = self.__conv(2, name='conv5_block11_1_conv', in_channels=832, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block11_1_bn = self.__batch_normalization(2, 'conv5_block11_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block11_2_conv = self.__conv(2, name='conv5_block11_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block12_0_bn = self.__batch_normalization(2, 'conv5_block12_0_bn', num_features=864, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block12_1_conv = self.__conv(2, name='conv5_block12_1_conv', in_channels=864, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block12_1_bn = self.__batch_normalization(2, 'conv5_block12_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block12_2_conv = self.__conv(2, name='conv5_block12_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block13_0_bn = self.__batch_normalization(2, 'conv5_block13_0_bn', num_features=896, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block13_1_conv = self.__conv(2, name='conv5_block13_1_conv', in_channels=896, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block13_1_bn = self.__batch_normalization(2, 'conv5_block13_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block13_2_conv = self.__conv(2, name='conv5_block13_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block14_0_bn = self.__batch_normalization(2, 'conv5_block14_0_bn', num_features=928, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block14_1_conv = self.__conv(2, name='conv5_block14_1_conv', in_channels=928, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block14_1_bn = self.__batch_normalization(2, 'conv5_block14_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block14_2_conv = self.__conv(2, name='conv5_block14_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block15_0_bn = self.__batch_normalization(2, 'conv5_block15_0_bn', num_features=960, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block15_1_conv = self.__conv(2, name='conv5_block15_1_conv', in_channels=960, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block15_1_bn = self.__batch_normalization(2, 'conv5_block15_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block15_2_conv = self.__conv(2, name='conv5_block15_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.conv5_block16_0_bn = self.__batch_normalization(2, 'conv5_block16_0_bn', num_features=992, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block16_1_conv = self.__conv(2, name='conv5_block16_1_conv', in_channels=992, out_channels=128, kernel_size=(1, 1), stride=(1, 1), groups=1, bias=False)
            self.conv5_block16_1_bn = self.__batch_normalization(2, 'conv5_block16_1_bn', num_features=128, eps=1.0009999641624745e-05, momentum=0.0)
            self.conv5_block16_2_conv = self.__conv(2, name='conv5_block16_2_conv', in_channels=128, out_channels=32, kernel_size=(3, 3), stride=(1, 1), groups=1, bias=False)
            self.bn = self.__batch_normalization(2, 'bn', num_features=1024, eps=1.0009999641624745e-05, momentum=0.0)
            self.dropout = nn.Dropout(p=0.1)
            self.out = self.__dense(name = 'out', in_features = 1024, out_features = 1, bias = True)

        def forward(self, x):
            zero_padding2d_1 = F.pad(x, (3, 3, 3, 3), mode = 'constant', value = 0)
            conv1_conv      = self.conv1_conv(zero_padding2d_1)
            conv1_bn        = self.conv1_bn(conv1_conv)
            conv1_relu      = F.relu(conv1_bn)
            zero_padding2d_2 = F.pad(conv1_relu, (1, 1, 1, 1), mode = 'constant', value = 0)
            pool1, pool1_idx = F.max_pool2d(zero_padding2d_2, kernel_size=(3, 3), stride=(2, 2), padding=0, ceil_mode=False, return_indices=True)
            conv2_block1_0_bn = self.conv2_block1_0_bn(pool1)
            conv2_block1_0_relu = F.relu(conv2_block1_0_bn)
            conv2_block1_1_conv = self.conv2_block1_1_conv(conv2_block1_0_relu)
            conv2_block1_1_bn = self.conv2_block1_1_bn(conv2_block1_1_conv)
            conv2_block1_1_relu = F.relu(conv2_block1_1_bn)
            conv2_block1_2_conv_pad = F.pad(conv2_block1_1_relu, (1, 1, 1, 1))
            conv2_block1_2_conv = self.conv2_block1_2_conv(conv2_block1_2_conv_pad)
            conv2_block1_concat = torch.cat((pool1, conv2_block1_2_conv,), 1)
            conv2_block2_0_bn = self.conv2_block2_0_bn(conv2_block1_concat)
            conv2_block2_0_relu = F.relu(conv2_block2_0_bn)
            conv2_block2_1_conv = self.conv2_block2_1_conv(conv2_block2_0_relu)
            conv2_block2_1_bn = self.conv2_block2_1_bn(conv2_block2_1_conv)
            conv2_block2_1_relu = F.relu(conv2_block2_1_bn)
            conv2_block2_2_conv_pad = F.pad(conv2_block2_1_relu, (1, 1, 1, 1))
            conv2_block2_2_conv = self.conv2_block2_2_conv(conv2_block2_2_conv_pad)
            conv2_block2_concat = torch.cat((conv2_block1_concat, conv2_block2_2_conv,), 1)
            conv2_block3_0_bn = self.conv2_block3_0_bn(conv2_block2_concat)
            conv2_block3_0_relu = F.relu(conv2_block3_0_bn)
            conv2_block3_1_conv = self.conv2_block3_1_conv(conv2_block3_0_relu)
            conv2_block3_1_bn = self.conv2_block3_1_bn(conv2_block3_1_conv)
            conv2_block3_1_relu = F.relu(conv2_block3_1_bn)
            conv2_block3_2_conv_pad = F.pad(conv2_block3_1_relu, (1, 1, 1, 1))
            conv2_block3_2_conv = self.conv2_block3_2_conv(conv2_block3_2_conv_pad)
            conv2_block3_concat = torch.cat((conv2_block2_concat, conv2_block3_2_conv,), 1)
            conv2_block4_0_bn = self.conv2_block4_0_bn(conv2_block3_concat)
            conv2_block4_0_relu = F.relu(conv2_block4_0_bn)
            conv2_block4_1_conv = self.conv2_block4_1_conv(conv2_block4_0_relu)
            conv2_block4_1_bn = self.conv2_block4_1_bn(conv2_block4_1_conv)
            conv2_block4_1_relu = F.relu(conv2_block4_1_bn)
            conv2_block4_2_conv_pad = F.pad(conv2_block4_1_relu, (1, 1, 1, 1))
            conv2_block4_2_conv = self.conv2_block4_2_conv(conv2_block4_2_conv_pad)
            conv2_block4_concat = torch.cat((conv2_block3_concat, conv2_block4_2_conv,), 1)
            conv2_block5_0_bn = self.conv2_block5_0_bn(conv2_block4_concat)
            conv2_block5_0_relu = F.relu(conv2_block5_0_bn)
            conv2_block5_1_conv = self.conv2_block5_1_conv(conv2_block5_0_relu)
            conv2_block5_1_bn = self.conv2_block5_1_bn(conv2_block5_1_conv)
            conv2_block5_1_relu = F.relu(conv2_block5_1_bn)
            conv2_block5_2_conv_pad = F.pad(conv2_block5_1_relu, (1, 1, 1, 1))
            conv2_block5_2_conv = self.conv2_block5_2_conv(conv2_block5_2_conv_pad)
            conv2_block5_concat = torch.cat((conv2_block4_concat, conv2_block5_2_conv,), 1)
            conv2_block6_0_bn = self.conv2_block6_0_bn(conv2_block5_concat)
            conv2_block6_0_relu = F.relu(conv2_block6_0_bn)
            conv2_block6_1_conv = self.conv2_block6_1_conv(conv2_block6_0_relu)
            conv2_block6_1_bn = self.conv2_block6_1_bn(conv2_block6_1_conv)
            conv2_block6_1_relu = F.relu(conv2_block6_1_bn)
            conv2_block6_2_conv_pad = F.pad(conv2_block6_1_relu, (1, 1, 1, 1))
            conv2_block6_2_conv = self.conv2_block6_2_conv(conv2_block6_2_conv_pad)
            conv2_block6_concat = torch.cat((conv2_block5_concat, conv2_block6_2_conv,), 1)
            pool2_bn        = self.pool2_bn(conv2_block6_concat)
            pool2_relu      = F.relu(pool2_bn)
            pool2_conv      = self.pool2_conv(pool2_relu)
            pool2_pool      = F.avg_pool2d(pool2_conv, kernel_size=(2, 2), stride=(2, 2), padding=(0,), ceil_mode=False, count_include_pad=False)
            conv3_block1_0_bn = self.conv3_block1_0_bn(pool2_pool)
            conv3_block1_0_relu = F.relu(conv3_block1_0_bn)
            conv3_block1_1_conv = self.conv3_block1_1_conv(conv3_block1_0_relu)
            conv3_block1_1_bn = self.conv3_block1_1_bn(conv3_block1_1_conv)
            conv3_block1_1_relu = F.relu(conv3_block1_1_bn)
            conv3_block1_2_conv_pad = F.pad(conv3_block1_1_relu, (1, 1, 1, 1))
            conv3_block1_2_conv = self.conv3_block1_2_conv(conv3_block1_2_conv_pad)
            conv3_block1_concat = torch.cat((pool2_pool, conv3_block1_2_conv,), 1)
            conv3_block2_0_bn = self.conv3_block2_0_bn(conv3_block1_concat)
            conv3_block2_0_relu = F.relu(conv3_block2_0_bn)
            conv3_block2_1_conv = self.conv3_block2_1_conv(conv3_block2_0_relu)
            conv3_block2_1_bn = self.conv3_block2_1_bn(conv3_block2_1_conv)
            conv3_block2_1_relu = F.relu(conv3_block2_1_bn)
            conv3_block2_2_conv_pad = F.pad(conv3_block2_1_relu, (1, 1, 1, 1))
            conv3_block2_2_conv = self.conv3_block2_2_conv(conv3_block2_2_conv_pad)
            conv3_block2_concat = torch.cat((conv3_block1_concat, conv3_block2_2_conv,), 1)
            conv3_block3_0_bn = self.conv3_block3_0_bn(conv3_block2_concat)
            conv3_block3_0_relu = F.relu(conv3_block3_0_bn)
            conv3_block3_1_conv = self.conv3_block3_1_conv(conv3_block3_0_relu)
            conv3_block3_1_bn = self.conv3_block3_1_bn(conv3_block3_1_conv)
            conv3_block3_1_relu = F.relu(conv3_block3_1_bn)
            conv3_block3_2_conv_pad = F.pad(conv3_block3_1_relu, (1, 1, 1, 1))
            conv3_block3_2_conv = self.conv3_block3_2_conv(conv3_block3_2_conv_pad)
            conv3_block3_concat = torch.cat((conv3_block2_concat, conv3_block3_2_conv,), 1)
            conv3_block4_0_bn = self.conv3_block4_0_bn(conv3_block3_concat)
            conv3_block4_0_relu = F.relu(conv3_block4_0_bn)
            conv3_block4_1_conv = self.conv3_block4_1_conv(conv3_block4_0_relu)
            conv3_block4_1_bn = self.conv3_block4_1_bn(conv3_block4_1_conv)
            conv3_block4_1_relu = F.relu(conv3_block4_1_bn)
            conv3_block4_2_conv_pad = F.pad(conv3_block4_1_relu, (1, 1, 1, 1))
            conv3_block4_2_conv = self.conv3_block4_2_conv(conv3_block4_2_conv_pad)
            conv3_block4_concat = torch.cat((conv3_block3_concat, conv3_block4_2_conv,), 1)
            conv3_block5_0_bn = self.conv3_block5_0_bn(conv3_block4_concat)
            conv3_block5_0_relu = F.relu(conv3_block5_0_bn)
            conv3_block5_1_conv = self.conv3_block5_1_conv(conv3_block5_0_relu)
            conv3_block5_1_bn = self.conv3_block5_1_bn(conv3_block5_1_conv)
            conv3_block5_1_relu = F.relu(conv3_block5_1_bn)
            conv3_block5_2_conv_pad = F.pad(conv3_block5_1_relu, (1, 1, 1, 1))
            conv3_block5_2_conv = self.conv3_block5_2_conv(conv3_block5_2_conv_pad)
            conv3_block5_concat = torch.cat((conv3_block4_concat, conv3_block5_2_conv,), 1)
            conv3_block6_0_bn = self.conv3_block6_0_bn(conv3_block5_concat)
            conv3_block6_0_relu = F.relu(conv3_block6_0_bn)
            conv3_block6_1_conv = self.conv3_block6_1_conv(conv3_block6_0_relu)
            conv3_block6_1_bn = self.conv3_block6_1_bn(conv3_block6_1_conv)
            conv3_block6_1_relu = F.relu(conv3_block6_1_bn)
            conv3_block6_2_conv_pad = F.pad(conv3_block6_1_relu, (1, 1, 1, 1))
            conv3_block6_2_conv = self.conv3_block6_2_conv(conv3_block6_2_conv_pad)
            conv3_block6_concat = torch.cat((conv3_block5_concat, conv3_block6_2_conv,), 1)
            conv3_block7_0_bn = self.conv3_block7_0_bn(conv3_block6_concat)
            conv3_block7_0_relu = F.relu(conv3_block7_0_bn)
            conv3_block7_1_conv = self.conv3_block7_1_conv(conv3_block7_0_relu)
            conv3_block7_1_bn = self.conv3_block7_1_bn(conv3_block7_1_conv)
            conv3_block7_1_relu = F.relu(conv3_block7_1_bn)
            conv3_block7_2_conv_pad = F.pad(conv3_block7_1_relu, (1, 1, 1, 1))
            conv3_block7_2_conv = self.conv3_block7_2_conv(conv3_block7_2_conv_pad)
            conv3_block7_concat = torch.cat((conv3_block6_concat, conv3_block7_2_conv,), 1)
            conv3_block8_0_bn = self.conv3_block8_0_bn(conv3_block7_concat)
            conv3_block8_0_relu = F.relu(conv3_block8_0_bn)
            conv3_block8_1_conv = self.conv3_block8_1_conv(conv3_block8_0_relu)
            conv3_block8_1_bn = self.conv3_block8_1_bn(conv3_block8_1_conv)
            conv3_block8_1_relu = F.relu(conv3_block8_1_bn)
            conv3_block8_2_conv_pad = F.pad(conv3_block8_1_relu, (1, 1, 1, 1))
            conv3_block8_2_conv = self.conv3_block8_2_conv(conv3_block8_2_conv_pad)
            conv3_block8_concat = torch.cat((conv3_block7_concat, conv3_block8_2_conv,), 1)
            conv3_block9_0_bn = self.conv3_block9_0_bn(conv3_block8_concat)
            conv3_block9_0_relu = F.relu(conv3_block9_0_bn)
            conv3_block9_1_conv = self.conv3_block9_1_conv(conv3_block9_0_relu)
            conv3_block9_1_bn = self.conv3_block9_1_bn(conv3_block9_1_conv)
            conv3_block9_1_relu = F.relu(conv3_block9_1_bn)
            conv3_block9_2_conv_pad = F.pad(conv3_block9_1_relu, (1, 1, 1, 1))
            conv3_block9_2_conv = self.conv3_block9_2_conv(conv3_block9_2_conv_pad)
            conv3_block9_concat = torch.cat((conv3_block8_concat, conv3_block9_2_conv,), 1)
            conv3_block10_0_bn = self.conv3_block10_0_bn(conv3_block9_concat)
            conv3_block10_0_relu = F.relu(conv3_block10_0_bn)
            conv3_block10_1_conv = self.conv3_block10_1_conv(conv3_block10_0_relu)
            conv3_block10_1_bn = self.conv3_block10_1_bn(conv3_block10_1_conv)
            conv3_block10_1_relu = F.relu(conv3_block10_1_bn)
            conv3_block10_2_conv_pad = F.pad(conv3_block10_1_relu, (1, 1, 1, 1))
            conv3_block10_2_conv = self.conv3_block10_2_conv(conv3_block10_2_conv_pad)
            conv3_block10_concat = torch.cat((conv3_block9_concat, conv3_block10_2_conv,), 1)
            conv3_block11_0_bn = self.conv3_block11_0_bn(conv3_block10_concat)
            conv3_block11_0_relu = F.relu(conv3_block11_0_bn)
            conv3_block11_1_conv = self.conv3_block11_1_conv(conv3_block11_0_relu)
            conv3_block11_1_bn = self.conv3_block11_1_bn(conv3_block11_1_conv)
            conv3_block11_1_relu = F.relu(conv3_block11_1_bn)
            conv3_block11_2_conv_pad = F.pad(conv3_block11_1_relu, (1, 1, 1, 1))
            conv3_block11_2_conv = self.conv3_block11_2_conv(conv3_block11_2_conv_pad)
            conv3_block11_concat = torch.cat((conv3_block10_concat, conv3_block11_2_conv,), 1)
            conv3_block12_0_bn = self.conv3_block12_0_bn(conv3_block11_concat)
            conv3_block12_0_relu = F.relu(conv3_block12_0_bn)
            conv3_block12_1_conv = self.conv3_block12_1_conv(conv3_block12_0_relu)
            conv3_block12_1_bn = self.conv3_block12_1_bn(conv3_block12_1_conv)
            conv3_block12_1_relu = F.relu(conv3_block12_1_bn)
            conv3_block12_2_conv_pad = F.pad(conv3_block12_1_relu, (1, 1, 1, 1))
            conv3_block12_2_conv = self.conv3_block12_2_conv(conv3_block12_2_conv_pad)
            conv3_block12_concat = torch.cat((conv3_block11_concat, conv3_block12_2_conv,), 1)
            pool3_bn        = self.pool3_bn(conv3_block12_concat)
            pool3_relu      = F.relu(pool3_bn)
            pool3_conv      = self.pool3_conv(pool3_relu)
            pool3_pool      = F.avg_pool2d(pool3_conv, kernel_size=(2, 2), stride=(2, 2), padding=(0,), ceil_mode=False, count_include_pad=False)
            conv4_block1_0_bn = self.conv4_block1_0_bn(pool3_pool)
            conv4_block1_0_relu = F.relu(conv4_block1_0_bn)
            conv4_block1_1_conv = self.conv4_block1_1_conv(conv4_block1_0_relu)
            conv4_block1_1_bn = self.conv4_block1_1_bn(conv4_block1_1_conv)
            conv4_block1_1_relu = F.relu(conv4_block1_1_bn)
            conv4_block1_2_conv_pad = F.pad(conv4_block1_1_relu, (1, 1, 1, 1))
            conv4_block1_2_conv = self.conv4_block1_2_conv(conv4_block1_2_conv_pad)
            conv4_block1_concat = torch.cat((pool3_pool, conv4_block1_2_conv,), 1)
            conv4_block2_0_bn = self.conv4_block2_0_bn(conv4_block1_concat)
            conv4_block2_0_relu = F.relu(conv4_block2_0_bn)
            conv4_block2_1_conv = self.conv4_block2_1_conv(conv4_block2_0_relu)
            conv4_block2_1_bn = self.conv4_block2_1_bn(conv4_block2_1_conv)
            conv4_block2_1_relu = F.relu(conv4_block2_1_bn)
            conv4_block2_2_conv_pad = F.pad(conv4_block2_1_relu, (1, 1, 1, 1))
            conv4_block2_2_conv = self.conv4_block2_2_conv(conv4_block2_2_conv_pad)
            conv4_block2_concat = torch.cat((conv4_block1_concat, conv4_block2_2_conv,), 1)
            conv4_block3_0_bn = self.conv4_block3_0_bn(conv4_block2_concat)
            conv4_block3_0_relu = F.relu(conv4_block3_0_bn)
            conv4_block3_1_conv = self.conv4_block3_1_conv(conv4_block3_0_relu)
            conv4_block3_1_bn = self.conv4_block3_1_bn(conv4_block3_1_conv)
            conv4_block3_1_relu = F.relu(conv4_block3_1_bn)
            conv4_block3_2_conv_pad = F.pad(conv4_block3_1_relu, (1, 1, 1, 1))
            conv4_block3_2_conv = self.conv4_block3_2_conv(conv4_block3_2_conv_pad)
            conv4_block3_concat = torch.cat((conv4_block2_concat, conv4_block3_2_conv,), 1)
            conv4_block4_0_bn = self.conv4_block4_0_bn(conv4_block3_concat)
            conv4_block4_0_relu = F.relu(conv4_block4_0_bn)
            conv4_block4_1_conv = self.conv4_block4_1_conv(conv4_block4_0_relu)
            conv4_block4_1_bn = self.conv4_block4_1_bn(conv4_block4_1_conv)
            conv4_block4_1_relu = F.relu(conv4_block4_1_bn)
            conv4_block4_2_conv_pad = F.pad(conv4_block4_1_relu, (1, 1, 1, 1))
            conv4_block4_2_conv = self.conv4_block4_2_conv(conv4_block4_2_conv_pad)
            conv4_block4_concat = torch.cat((conv4_block3_concat, conv4_block4_2_conv,), 1)
            conv4_block5_0_bn = self.conv4_block5_0_bn(conv4_block4_concat)
            conv4_block5_0_relu = F.relu(conv4_block5_0_bn)
            conv4_block5_1_conv = self.conv4_block5_1_conv(conv4_block5_0_relu)
            conv4_block5_1_bn = self.conv4_block5_1_bn(conv4_block5_1_conv)
            conv4_block5_1_relu = F.relu(conv4_block5_1_bn)
            conv4_block5_2_conv_pad = F.pad(conv4_block5_1_relu, (1, 1, 1, 1))
            conv4_block5_2_conv = self.conv4_block5_2_conv(conv4_block5_2_conv_pad)
            conv4_block5_concat = torch.cat((conv4_block4_concat, conv4_block5_2_conv,), 1)
            conv4_block6_0_bn = self.conv4_block6_0_bn(conv4_block5_concat)
            conv4_block6_0_relu = F.relu(conv4_block6_0_bn)
            conv4_block6_1_conv = self.conv4_block6_1_conv(conv4_block6_0_relu)
            conv4_block6_1_bn = self.conv4_block6_1_bn(conv4_block6_1_conv)
            conv4_block6_1_relu = F.relu(conv4_block6_1_bn)
            conv4_block6_2_conv_pad = F.pad(conv4_block6_1_relu, (1, 1, 1, 1))
            conv4_block6_2_conv = self.conv4_block6_2_conv(conv4_block6_2_conv_pad)
            conv4_block6_concat = torch.cat((conv4_block5_concat, conv4_block6_2_conv,), 1)
            conv4_block7_0_bn = self.conv4_block7_0_bn(conv4_block6_concat)
            conv4_block7_0_relu = F.relu(conv4_block7_0_bn)
            conv4_block7_1_conv = self.conv4_block7_1_conv(conv4_block7_0_relu)
            conv4_block7_1_bn = self.conv4_block7_1_bn(conv4_block7_1_conv)
            conv4_block7_1_relu = F.relu(conv4_block7_1_bn)
            conv4_block7_2_conv_pad = F.pad(conv4_block7_1_relu, (1, 1, 1, 1))
            conv4_block7_2_conv = self.conv4_block7_2_conv(conv4_block7_2_conv_pad)
            conv4_block7_concat = torch.cat((conv4_block6_concat, conv4_block7_2_conv,), 1)
            conv4_block8_0_bn = self.conv4_block8_0_bn(conv4_block7_concat)
            conv4_block8_0_relu = F.relu(conv4_block8_0_bn)
            conv4_block8_1_conv = self.conv4_block8_1_conv(conv4_block8_0_relu)
            conv4_block8_1_bn = self.conv4_block8_1_bn(conv4_block8_1_conv)
            conv4_block8_1_relu = F.relu(conv4_block8_1_bn)
            conv4_block8_2_conv_pad = F.pad(conv4_block8_1_relu, (1, 1, 1, 1))
            conv4_block8_2_conv = self.conv4_block8_2_conv(conv4_block8_2_conv_pad)
            conv4_block8_concat = torch.cat((conv4_block7_concat, conv4_block8_2_conv,), 1)
            conv4_block9_0_bn = self.conv4_block9_0_bn(conv4_block8_concat)
            conv4_block9_0_relu = F.relu(conv4_block9_0_bn)
            conv4_block9_1_conv = self.conv4_block9_1_conv(conv4_block9_0_relu)
            conv4_block9_1_bn = self.conv4_block9_1_bn(conv4_block9_1_conv)
            conv4_block9_1_relu = F.relu(conv4_block9_1_bn)
            conv4_block9_2_conv_pad = F.pad(conv4_block9_1_relu, (1, 1, 1, 1))
            conv4_block9_2_conv = self.conv4_block9_2_conv(conv4_block9_2_conv_pad)
            conv4_block9_concat = torch.cat((conv4_block8_concat, conv4_block9_2_conv,), 1)
            conv4_block10_0_bn = self.conv4_block10_0_bn(conv4_block9_concat)
            conv4_block10_0_relu = F.relu(conv4_block10_0_bn)
            conv4_block10_1_conv = self.conv4_block10_1_conv(conv4_block10_0_relu)
            conv4_block10_1_bn = self.conv4_block10_1_bn(conv4_block10_1_conv)
            conv4_block10_1_relu = F.relu(conv4_block10_1_bn)
            conv4_block10_2_conv_pad = F.pad(conv4_block10_1_relu, (1, 1, 1, 1))
            conv4_block10_2_conv = self.conv4_block10_2_conv(conv4_block10_2_conv_pad)
            conv4_block10_concat = torch.cat((conv4_block9_concat, conv4_block10_2_conv,), 1)
            conv4_block11_0_bn = self.conv4_block11_0_bn(conv4_block10_concat)
            conv4_block11_0_relu = F.relu(conv4_block11_0_bn)
            conv4_block11_1_conv = self.conv4_block11_1_conv(conv4_block11_0_relu)
            conv4_block11_1_bn = self.conv4_block11_1_bn(conv4_block11_1_conv)
            conv4_block11_1_relu = F.relu(conv4_block11_1_bn)
            conv4_block11_2_conv_pad = F.pad(conv4_block11_1_relu, (1, 1, 1, 1))
            conv4_block11_2_conv = self.conv4_block11_2_conv(conv4_block11_2_conv_pad)
            conv4_block11_concat = torch.cat((conv4_block10_concat, conv4_block11_2_conv,), 1)
            conv4_block12_0_bn = self.conv4_block12_0_bn(conv4_block11_concat)
            conv4_block12_0_relu = F.relu(conv4_block12_0_bn)
            conv4_block12_1_conv = self.conv4_block12_1_conv(conv4_block12_0_relu)
            conv4_block12_1_bn = self.conv4_block12_1_bn(conv4_block12_1_conv)
            conv4_block12_1_relu = F.relu(conv4_block12_1_bn)
            conv4_block12_2_conv_pad = F.pad(conv4_block12_1_relu, (1, 1, 1, 1))
            conv4_block12_2_conv = self.conv4_block12_2_conv(conv4_block12_2_conv_pad)
            conv4_block12_concat = torch.cat((conv4_block11_concat, conv4_block12_2_conv,), 1)
            conv4_block13_0_bn = self.conv4_block13_0_bn(conv4_block12_concat)
            conv4_block13_0_relu = F.relu(conv4_block13_0_bn)
            conv4_block13_1_conv = self.conv4_block13_1_conv(conv4_block13_0_relu)
            conv4_block13_1_bn = self.conv4_block13_1_bn(conv4_block13_1_conv)
            conv4_block13_1_relu = F.relu(conv4_block13_1_bn)
            conv4_block13_2_conv_pad = F.pad(conv4_block13_1_relu, (1, 1, 1, 1))
            conv4_block13_2_conv = self.conv4_block13_2_conv(conv4_block13_2_conv_pad)
            conv4_block13_concat = torch.cat((conv4_block12_concat, conv4_block13_2_conv,), 1)
            conv4_block14_0_bn = self.conv4_block14_0_bn(conv4_block13_concat)
            conv4_block14_0_relu = F.relu(conv4_block14_0_bn)
            conv4_block14_1_conv = self.conv4_block14_1_conv(conv4_block14_0_relu)
            conv4_block14_1_bn = self.conv4_block14_1_bn(conv4_block14_1_conv)
            conv4_block14_1_relu = F.relu(conv4_block14_1_bn)
            conv4_block14_2_conv_pad = F.pad(conv4_block14_1_relu, (1, 1, 1, 1))
            conv4_block14_2_conv = self.conv4_block14_2_conv(conv4_block14_2_conv_pad)
            conv4_block14_concat = torch.cat((conv4_block13_concat, conv4_block14_2_conv,), 1)
            conv4_block15_0_bn = self.conv4_block15_0_bn(conv4_block14_concat)
            conv4_block15_0_relu = F.relu(conv4_block15_0_bn)
            conv4_block15_1_conv = self.conv4_block15_1_conv(conv4_block15_0_relu)
            conv4_block15_1_bn = self.conv4_block15_1_bn(conv4_block15_1_conv)
            conv4_block15_1_relu = F.relu(conv4_block15_1_bn)
            conv4_block15_2_conv_pad = F.pad(conv4_block15_1_relu, (1, 1, 1, 1))
            conv4_block15_2_conv = self.conv4_block15_2_conv(conv4_block15_2_conv_pad)
            conv4_block15_concat = torch.cat((conv4_block14_concat, conv4_block15_2_conv,), 1)
            conv4_block16_0_bn = self.conv4_block16_0_bn(conv4_block15_concat)
            conv4_block16_0_relu = F.relu(conv4_block16_0_bn)
            conv4_block16_1_conv = self.conv4_block16_1_conv(conv4_block16_0_relu)
            conv4_block16_1_bn = self.conv4_block16_1_bn(conv4_block16_1_conv)
            conv4_block16_1_relu = F.relu(conv4_block16_1_bn)
            conv4_block16_2_conv_pad = F.pad(conv4_block16_1_relu, (1, 1, 1, 1))
            conv4_block16_2_conv = self.conv4_block16_2_conv(conv4_block16_2_conv_pad)
            conv4_block16_concat = torch.cat((conv4_block15_concat, conv4_block16_2_conv,), 1)
            conv4_block17_0_bn = self.conv4_block17_0_bn(conv4_block16_concat)
            conv4_block17_0_relu = F.relu(conv4_block17_0_bn)
            conv4_block17_1_conv = self.conv4_block17_1_conv(conv4_block17_0_relu)
            conv4_block17_1_bn = self.conv4_block17_1_bn(conv4_block17_1_conv)
            conv4_block17_1_relu = F.relu(conv4_block17_1_bn)
            conv4_block17_2_conv_pad = F.pad(conv4_block17_1_relu, (1, 1, 1, 1))
            conv4_block17_2_conv = self.conv4_block17_2_conv(conv4_block17_2_conv_pad)
            conv4_block17_concat = torch.cat((conv4_block16_concat, conv4_block17_2_conv,), 1)
            conv4_block18_0_bn = self.conv4_block18_0_bn(conv4_block17_concat)
            conv4_block18_0_relu = F.relu(conv4_block18_0_bn)
            conv4_block18_1_conv = self.conv4_block18_1_conv(conv4_block18_0_relu)
            conv4_block18_1_bn = self.conv4_block18_1_bn(conv4_block18_1_conv)
            conv4_block18_1_relu = F.relu(conv4_block18_1_bn)
            conv4_block18_2_conv_pad = F.pad(conv4_block18_1_relu, (1, 1, 1, 1))
            conv4_block18_2_conv = self.conv4_block18_2_conv(conv4_block18_2_conv_pad)
            conv4_block18_concat = torch.cat((conv4_block17_concat, conv4_block18_2_conv,), 1)
            conv4_block19_0_bn = self.conv4_block19_0_bn(conv4_block18_concat)
            conv4_block19_0_relu = F.relu(conv4_block19_0_bn)
            conv4_block19_1_conv = self.conv4_block19_1_conv(conv4_block19_0_relu)
            conv4_block19_1_bn = self.conv4_block19_1_bn(conv4_block19_1_conv)
            conv4_block19_1_relu = F.relu(conv4_block19_1_bn)
            conv4_block19_2_conv_pad = F.pad(conv4_block19_1_relu, (1, 1, 1, 1))
            conv4_block19_2_conv = self.conv4_block19_2_conv(conv4_block19_2_conv_pad)
            conv4_block19_concat = torch.cat((conv4_block18_concat, conv4_block19_2_conv,), 1)
            conv4_block20_0_bn = self.conv4_block20_0_bn(conv4_block19_concat)
            conv4_block20_0_relu = F.relu(conv4_block20_0_bn)
            conv4_block20_1_conv = self.conv4_block20_1_conv(conv4_block20_0_relu)
            conv4_block20_1_bn = self.conv4_block20_1_bn(conv4_block20_1_conv)
            conv4_block20_1_relu = F.relu(conv4_block20_1_bn)
            conv4_block20_2_conv_pad = F.pad(conv4_block20_1_relu, (1, 1, 1, 1))
            conv4_block20_2_conv = self.conv4_block20_2_conv(conv4_block20_2_conv_pad)
            conv4_block20_concat = torch.cat((conv4_block19_concat, conv4_block20_2_conv,), 1)
            conv4_block21_0_bn = self.conv4_block21_0_bn(conv4_block20_concat)
            conv4_block21_0_relu = F.relu(conv4_block21_0_bn)
            conv4_block21_1_conv = self.conv4_block21_1_conv(conv4_block21_0_relu)
            conv4_block21_1_bn = self.conv4_block21_1_bn(conv4_block21_1_conv)
            conv4_block21_1_relu = F.relu(conv4_block21_1_bn)
            conv4_block21_2_conv_pad = F.pad(conv4_block21_1_relu, (1, 1, 1, 1))
            conv4_block21_2_conv = self.conv4_block21_2_conv(conv4_block21_2_conv_pad)
            conv4_block21_concat = torch.cat((conv4_block20_concat, conv4_block21_2_conv,), 1)
            conv4_block22_0_bn = self.conv4_block22_0_bn(conv4_block21_concat)
            conv4_block22_0_relu = F.relu(conv4_block22_0_bn)
            conv4_block22_1_conv = self.conv4_block22_1_conv(conv4_block22_0_relu)
            conv4_block22_1_bn = self.conv4_block22_1_bn(conv4_block22_1_conv)
            conv4_block22_1_relu = F.relu(conv4_block22_1_bn)
            conv4_block22_2_conv_pad = F.pad(conv4_block22_1_relu, (1, 1, 1, 1))
            conv4_block22_2_conv = self.conv4_block22_2_conv(conv4_block22_2_conv_pad)
            conv4_block22_concat = torch.cat((conv4_block21_concat, conv4_block22_2_conv,), 1)
            conv4_block23_0_bn = self.conv4_block23_0_bn(conv4_block22_concat)
            conv4_block23_0_relu = F.relu(conv4_block23_0_bn)
            conv4_block23_1_conv = self.conv4_block23_1_conv(conv4_block23_0_relu)
            conv4_block23_1_bn = self.conv4_block23_1_bn(conv4_block23_1_conv)
            conv4_block23_1_relu = F.relu(conv4_block23_1_bn)
            conv4_block23_2_conv_pad = F.pad(conv4_block23_1_relu, (1, 1, 1, 1))
            conv4_block23_2_conv = self.conv4_block23_2_conv(conv4_block23_2_conv_pad)
            conv4_block23_concat = torch.cat((conv4_block22_concat, conv4_block23_2_conv,), 1)
            conv4_block24_0_bn = self.conv4_block24_0_bn(conv4_block23_concat)
            conv4_block24_0_relu = F.relu(conv4_block24_0_bn)
            conv4_block24_1_conv = self.conv4_block24_1_conv(conv4_block24_0_relu)
            conv4_block24_1_bn = self.conv4_block24_1_bn(conv4_block24_1_conv)
            conv4_block24_1_relu = F.relu(conv4_block24_1_bn)
            conv4_block24_2_conv_pad = F.pad(conv4_block24_1_relu, (1, 1, 1, 1))
            conv4_block24_2_conv = self.conv4_block24_2_conv(conv4_block24_2_conv_pad)
            conv4_block24_concat = torch.cat((conv4_block23_concat, conv4_block24_2_conv,), 1)
            pool4_bn        = self.pool4_bn(conv4_block24_concat)
            pool4_relu      = F.relu(pool4_bn)
            pool4_conv      = self.pool4_conv(pool4_relu)
            pool4_pool      = F.avg_pool2d(pool4_conv, kernel_size=(2, 2), stride=(2, 2), padding=(0,), ceil_mode=False, count_include_pad=False)
            conv5_block1_0_bn = self.conv5_block1_0_bn(pool4_pool)
            conv5_block1_0_relu = F.relu(conv5_block1_0_bn)
            conv5_block1_1_conv = self.conv5_block1_1_conv(conv5_block1_0_relu)
            conv5_block1_1_bn = self.conv5_block1_1_bn(conv5_block1_1_conv)
            conv5_block1_1_relu = F.relu(conv5_block1_1_bn)
            conv5_block1_2_conv_pad = F.pad(conv5_block1_1_relu, (1, 1, 1, 1))
            conv5_block1_2_conv = self.conv5_block1_2_conv(conv5_block1_2_conv_pad)
            conv5_block1_concat = torch.cat((pool4_pool, conv5_block1_2_conv,), 1)
            conv5_block2_0_bn = self.conv5_block2_0_bn(conv5_block1_concat)
            conv5_block2_0_relu = F.relu(conv5_block2_0_bn)
            conv5_block2_1_conv = self.conv5_block2_1_conv(conv5_block2_0_relu)
            conv5_block2_1_bn = self.conv5_block2_1_bn(conv5_block2_1_conv)
            conv5_block2_1_relu = F.relu(conv5_block2_1_bn)
            conv5_block2_2_conv_pad = F.pad(conv5_block2_1_relu, (1, 1, 1, 1))
            conv5_block2_2_conv = self.conv5_block2_2_conv(conv5_block2_2_conv_pad)
            conv5_block2_concat = torch.cat((conv5_block1_concat, conv5_block2_2_conv,), 1)
            conv5_block3_0_bn = self.conv5_block3_0_bn(conv5_block2_concat)
            conv5_block3_0_relu = F.relu(conv5_block3_0_bn)
            conv5_block3_1_conv = self.conv5_block3_1_conv(conv5_block3_0_relu)
            conv5_block3_1_bn = self.conv5_block3_1_bn(conv5_block3_1_conv)
            conv5_block3_1_relu = F.relu(conv5_block3_1_bn)
            conv5_block3_2_conv_pad = F.pad(conv5_block3_1_relu, (1, 1, 1, 1))
            conv5_block3_2_conv = self.conv5_block3_2_conv(conv5_block3_2_conv_pad)
            conv5_block3_concat = torch.cat((conv5_block2_concat, conv5_block3_2_conv,), 1)
            conv5_block4_0_bn = self.conv5_block4_0_bn(conv5_block3_concat)
            conv5_block4_0_relu = F.relu(conv5_block4_0_bn)
            conv5_block4_1_conv = self.conv5_block4_1_conv(conv5_block4_0_relu)
            conv5_block4_1_bn = self.conv5_block4_1_bn(conv5_block4_1_conv)
            conv5_block4_1_relu = F.relu(conv5_block4_1_bn)
            conv5_block4_2_conv_pad = F.pad(conv5_block4_1_relu, (1, 1, 1, 1))
            conv5_block4_2_conv = self.conv5_block4_2_conv(conv5_block4_2_conv_pad)
            conv5_block4_concat = torch.cat((conv5_block3_concat, conv5_block4_2_conv,), 1)
            conv5_block5_0_bn = self.conv5_block5_0_bn(conv5_block4_concat)
            conv5_block5_0_relu = F.relu(conv5_block5_0_bn)
            conv5_block5_1_conv = self.conv5_block5_1_conv(conv5_block5_0_relu)
            conv5_block5_1_bn = self.conv5_block5_1_bn(conv5_block5_1_conv)
            conv5_block5_1_relu = F.relu(conv5_block5_1_bn)
            conv5_block5_2_conv_pad = F.pad(conv5_block5_1_relu, (1, 1, 1, 1))
            conv5_block5_2_conv = self.conv5_block5_2_conv(conv5_block5_2_conv_pad)
            conv5_block5_concat = torch.cat((conv5_block4_concat, conv5_block5_2_conv,), 1)
            conv5_block6_0_bn = self.conv5_block6_0_bn(conv5_block5_concat)
            conv5_block6_0_relu = F.relu(conv5_block6_0_bn)
            conv5_block6_1_conv = self.conv5_block6_1_conv(conv5_block6_0_relu)
            conv5_block6_1_bn = self.conv5_block6_1_bn(conv5_block6_1_conv)
            conv5_block6_1_relu = F.relu(conv5_block6_1_bn)
            conv5_block6_2_conv_pad = F.pad(conv5_block6_1_relu, (1, 1, 1, 1))
            conv5_block6_2_conv = self.conv5_block6_2_conv(conv5_block6_2_conv_pad)
            conv5_block6_concat = torch.cat((conv5_block5_concat, conv5_block6_2_conv,), 1)
            conv5_block7_0_bn = self.conv5_block7_0_bn(conv5_block6_concat)
            conv5_block7_0_relu = F.relu(conv5_block7_0_bn)
            conv5_block7_1_conv = self.conv5_block7_1_conv(conv5_block7_0_relu)
            conv5_block7_1_bn = self.conv5_block7_1_bn(conv5_block7_1_conv)
            conv5_block7_1_relu = F.relu(conv5_block7_1_bn)
            conv5_block7_2_conv_pad = F.pad(conv5_block7_1_relu, (1, 1, 1, 1))
            conv5_block7_2_conv = self.conv5_block7_2_conv(conv5_block7_2_conv_pad)
            conv5_block7_concat = torch.cat((conv5_block6_concat, conv5_block7_2_conv,), 1)
            conv5_block8_0_bn = self.conv5_block8_0_bn(conv5_block7_concat)
            conv5_block8_0_relu = F.relu(conv5_block8_0_bn)
            conv5_block8_1_conv = self.conv5_block8_1_conv(conv5_block8_0_relu)
            conv5_block8_1_bn = self.conv5_block8_1_bn(conv5_block8_1_conv)
            conv5_block8_1_relu = F.relu(conv5_block8_1_bn)
            conv5_block8_2_conv_pad = F.pad(conv5_block8_1_relu, (1, 1, 1, 1))
            conv5_block8_2_conv = self.conv5_block8_2_conv(conv5_block8_2_conv_pad)
            conv5_block8_concat = torch.cat((conv5_block7_concat, conv5_block8_2_conv,), 1)
            conv5_block9_0_bn = self.conv5_block9_0_bn(conv5_block8_concat)
            conv5_block9_0_relu = F.relu(conv5_block9_0_bn)
            conv5_block9_1_conv = self.conv5_block9_1_conv(conv5_block9_0_relu)
            conv5_block9_1_bn = self.conv5_block9_1_bn(conv5_block9_1_conv)
            conv5_block9_1_relu = F.relu(conv5_block9_1_bn)
            conv5_block9_2_conv_pad = F.pad(conv5_block9_1_relu, (1, 1, 1, 1))
            conv5_block9_2_conv = self.conv5_block9_2_conv(conv5_block9_2_conv_pad)
            conv5_block9_concat = torch.cat((conv5_block8_concat, conv5_block9_2_conv,), 1)
            conv5_block10_0_bn = self.conv5_block10_0_bn(conv5_block9_concat)
            conv5_block10_0_relu = F.relu(conv5_block10_0_bn)
            conv5_block10_1_conv = self.conv5_block10_1_conv(conv5_block10_0_relu)
            conv5_block10_1_bn = self.conv5_block10_1_bn(conv5_block10_1_conv)
            conv5_block10_1_relu = F.relu(conv5_block10_1_bn)
            conv5_block10_2_conv_pad = F.pad(conv5_block10_1_relu, (1, 1, 1, 1))
            conv5_block10_2_conv = self.conv5_block10_2_conv(conv5_block10_2_conv_pad)
            conv5_block10_concat = torch.cat((conv5_block9_concat, conv5_block10_2_conv,), 1)
            conv5_block11_0_bn = self.conv5_block11_0_bn(conv5_block10_concat)
            conv5_block11_0_relu = F.relu(conv5_block11_0_bn)
            conv5_block11_1_conv = self.conv5_block11_1_conv(conv5_block11_0_relu)
            conv5_block11_1_bn = self.conv5_block11_1_bn(conv5_block11_1_conv)
            conv5_block11_1_relu = F.relu(conv5_block11_1_bn)
            conv5_block11_2_conv_pad = F.pad(conv5_block11_1_relu, (1, 1, 1, 1))
            conv5_block11_2_conv = self.conv5_block11_2_conv(conv5_block11_2_conv_pad)
            conv5_block11_concat = torch.cat((conv5_block10_concat, conv5_block11_2_conv,), 1)
            conv5_block12_0_bn = self.conv5_block12_0_bn(conv5_block11_concat)
            conv5_block12_0_relu = F.relu(conv5_block12_0_bn)
            conv5_block12_1_conv = self.conv5_block12_1_conv(conv5_block12_0_relu)
            conv5_block12_1_bn = self.conv5_block12_1_bn(conv5_block12_1_conv)
            conv5_block12_1_relu = F.relu(conv5_block12_1_bn)
            conv5_block12_2_conv_pad = F.pad(conv5_block12_1_relu, (1, 1, 1, 1))
            conv5_block12_2_conv = self.conv5_block12_2_conv(conv5_block12_2_conv_pad)
            conv5_block12_concat = torch.cat((conv5_block11_concat, conv5_block12_2_conv,), 1)
            conv5_block13_0_bn = self.conv5_block13_0_bn(conv5_block12_concat)
            conv5_block13_0_relu = F.relu(conv5_block13_0_bn)
            conv5_block13_1_conv = self.conv5_block13_1_conv(conv5_block13_0_relu)
            conv5_block13_1_bn = self.conv5_block13_1_bn(conv5_block13_1_conv)
            conv5_block13_1_relu = F.relu(conv5_block13_1_bn)
            conv5_block13_2_conv_pad = F.pad(conv5_block13_1_relu, (1, 1, 1, 1))
            conv5_block13_2_conv = self.conv5_block13_2_conv(conv5_block13_2_conv_pad)
            conv5_block13_concat = torch.cat((conv5_block12_concat, conv5_block13_2_conv,), 1)
            conv5_block14_0_bn = self.conv5_block14_0_bn(conv5_block13_concat)
            conv5_block14_0_relu = F.relu(conv5_block14_0_bn)
            conv5_block14_1_conv = self.conv5_block14_1_conv(conv5_block14_0_relu)
            conv5_block14_1_bn = self.conv5_block14_1_bn(conv5_block14_1_conv)
            conv5_block14_1_relu = F.relu(conv5_block14_1_bn)
            conv5_block14_2_conv_pad = F.pad(conv5_block14_1_relu, (1, 1, 1, 1))
            conv5_block14_2_conv = self.conv5_block14_2_conv(conv5_block14_2_conv_pad)
            conv5_block14_concat = torch.cat((conv5_block13_concat, conv5_block14_2_conv,), 1)
            conv5_block15_0_bn = self.conv5_block15_0_bn(conv5_block14_concat)
            conv5_block15_0_relu = F.relu(conv5_block15_0_bn)
            conv5_block15_1_conv = self.conv5_block15_1_conv(conv5_block15_0_relu)
            conv5_block15_1_bn = self.conv5_block15_1_bn(conv5_block15_1_conv)
            conv5_block15_1_relu = F.relu(conv5_block15_1_bn)
            conv5_block15_2_conv_pad = F.pad(conv5_block15_1_relu, (1, 1, 1, 1))
            conv5_block15_2_conv = self.conv5_block15_2_conv(conv5_block15_2_conv_pad)
            conv5_block15_concat = torch.cat((conv5_block14_concat, conv5_block15_2_conv,), 1)
            conv5_block16_0_bn = self.conv5_block16_0_bn(conv5_block15_concat)
            conv5_block16_0_relu = F.relu(conv5_block16_0_bn)
            conv5_block16_1_conv = self.conv5_block16_1_conv(conv5_block16_0_relu)
            conv5_block16_1_bn = self.conv5_block16_1_bn(conv5_block16_1_conv)
            conv5_block16_1_relu = F.relu(conv5_block16_1_bn)
            conv5_block16_2_conv_pad = F.pad(conv5_block16_1_relu, (1, 1, 1, 1))
            conv5_block16_2_conv = self.conv5_block16_2_conv(conv5_block16_2_conv_pad)
            conv5_block16_concat = torch.cat((conv5_block15_concat, conv5_block16_2_conv,), 1)
            bn              = self.bn(conv5_block16_concat)
            relu            = F.relu(bn)
            global_average_pooling2d_1 = F.avg_pool2d(input = relu, kernel_size = relu.size()[2:])
            global_average_pooling2d_1_flatten = global_average_pooling2d_1.view(global_average_pooling2d_1.size(0), -1)
            global_average_pooling2d_1_flatten = self.dropout(global_average_pooling2d_1_flatten)
            out             = self.out(global_average_pooling2d_1_flatten)
            out_activation  = F.sigmoid(out)
            return out_activation


        @staticmethod
        def __dense(name, **kwargs):
            layer = nn.Linear(**kwargs)
            if (_weights_dict is not None) and (len(_weights_dict) != 0):
                layer.state_dict()['weight'].copy_(torch.from_numpy(_weights_dict[name]['weights']))
                if 'bias' in _weights_dict[name]:
                    layer.state_dict()['bias'].copy_(torch.from_numpy(_weights_dict[name]['bias']))
            return layer

        @staticmethod
        def __batch_normalization(dim, name, **kwargs):
            if   dim == 0 or dim == 1:  layer = nn.BatchNorm1d(**kwargs)
            elif dim == 2:  layer = nn.BatchNorm2d(**kwargs)
            elif dim == 3:  layer = nn.BatchNorm3d(**kwargs)
            else:           raise NotImplementedError()
            if (_weights_dict is not None) and (len(_weights_dict) != 0):
                if 'scale' in _weights_dict[name]:
                    layer.state_dict()['weight'].copy_(torch.from_numpy(_weights_dict[name]['scale']))
                else:
                    layer.weight.data.fill_(1)

                if 'bias' in _weights_dict[name]:
                    layer.state_dict()['bias'].copy_(torch.from_numpy(_weights_dict[name]['bias']))
                else:
                    layer.bias.data.fill_(0)

                layer.state_dict()['running_mean'].copy_(torch.from_numpy(_weights_dict[name]['mean']))
                layer.state_dict()['running_var'].copy_(torch.from_numpy(_weights_dict[name]['var']))
            return layer

        @staticmethod
        def __conv(dim, name, **kwargs):
            
            if   dim == 1:  layer = nn.Conv1d(**kwargs)
            elif dim == 2:  layer = nn.Conv2d(**kwargs)
            elif dim == 3:  layer = nn.Conv3d(**kwargs)
            else:           raise NotImplementedError()
            if (_weights_dict is not None) and (len(_weights_dict) != 0):
                layer.state_dict()['weight'].copy_(torch.from_numpy(_weights_dict[name]['weights']))
                if 'bias' in _weights_dict[name]:
                    layer.state_dict()['bias'].copy_(torch.from_numpy(_weights_dict[name]['bias']))

            return layer
    # import importlib.machinery
    # import torch
    # import os.path as osp
    # import torch.nn as nn

    # class IsabelleModel:
    #     def __new__(cls, *args, **kwargs):
    #         root_folder = "/mnt/data0-nfs/hthieu/anl/APPFL/examples/pretrained"
    #         loader = importlib.machinery.SourceFileLoader("MainModel", osp.join(root_folder, "IsabelleTorch.py"))
    #         MainModel = loader.load_module()
    #         weight_file = osp.join(root_folder, "IsabellePhase2Weights.pt")
    #         # MainModel = loader.load_module()
    #         model = torch.load(weight_file)
    #         # model = KitModel(weight_file)
    #         model.out =  nn.Linear(in_features = 1024, out_features = 2, bias = True)
    #         return model
        
    #     def load_state_dict(self):
    #         return
    return KitModel
    