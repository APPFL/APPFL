client_configs:
  train_configs:
    # Local trainer
    trainer: "NaiveTrainer"
    mode: "step"
    num_local_steps: 100
    optim: "Adam"
    optim_args:
      lr: 0.001
    # Loss function
    loss_fn_path: "./loss/celoss.py"
    loss_fn_name: "CELoss"
    # Client validation
    do_validation: True
    do_pre_validation: True
    metric_path: "./metric/acc.py"
    metric_name: "accuracy"
    # Differential privacy
    use_dp: False
    epsilon: 1
    clip_grad: False
    clip_value: 1
    clip_norm: 1
    # Data loader
    train_batch_size: 64
    val_batch_size: 64
    train_data_shuffle: True
    val_data_shuffle: False
    
  model_configs:
    model_path: "./model/cnn.py"
    model_name: "CNN"
    model_kwargs:
      num_channel: 1
      num_classes: 10
      num_pixel: 28
  
  # comm_configs will be copied to server_configs as well
  comm_configs:
    compressor_configs:
      enable_compression: True
      # Used if enable_compression is True
      lossy_compressor:  "SZ2"
      lossless_compressor: "blosc"
      error_bounding_mode: "REL"
      error_bound: 1e-3
      flat_model_dtype: "np.float32"
      param_cutoff: 1024
    globus_compute_configs:
      s3_bucket: "appflx-models"
      s3_creds_file: "config_gc/creds/credential.csv"

server_configs:
  scheduler: "SyncScheduler"
  scheduler_kwargs:
    num_clients: 2
    same_init_model: True
  aggregator: "FedAvgAggregator"
  aggregator_kwargs:
    client_weights_mode: "equal"
  device: "cpu"
  num_global_epochs: 2
  server_validation: False
  logging_output_dirname: "./output"
  logging_output_filename: "result"
