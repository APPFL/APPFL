# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import grpc_communicator_old_pb2 as grpc__communicator__old__pb2


class GRPCCommunicatorV0Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetJob = channel.unary_unary(
                '/GRPCCommunicatorV0/GetJob',
                request_serializer=grpc__communicator__old__pb2.JobRequest.SerializeToString,
                response_deserializer=grpc__communicator__old__pb2.JobResponse.FromString,
                )
        self.GetTensorRecord = channel.unary_stream(
                '/GRPCCommunicatorV0/GetTensorRecord',
                request_serializer=grpc__communicator__old__pb2.TensorRequest.SerializeToString,
                response_deserializer=grpc__communicator__old__pb2.DataBufferV0.FromString,
                )
        self.GetWeight = channel.unary_unary(
                '/GRPCCommunicatorV0/GetWeight',
                request_serializer=grpc__communicator__old__pb2.WeightRequest.SerializeToString,
                response_deserializer=grpc__communicator__old__pb2.WeightResponse.FromString,
                )
        self.SendLearningResults = channel.stream_unary(
                '/GRPCCommunicatorV0/SendLearningResults',
                request_serializer=grpc__communicator__old__pb2.DataBufferV0.SerializeToString,
                response_deserializer=grpc__communicator__old__pb2.Acknowledgment.FromString,
                )


class GRPCCommunicatorV0Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTensorRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendLearningResults(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GRPCCommunicatorV0Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=grpc__communicator__old__pb2.JobRequest.FromString,
                    response_serializer=grpc__communicator__old__pb2.JobResponse.SerializeToString,
            ),
            'GetTensorRecord': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTensorRecord,
                    request_deserializer=grpc__communicator__old__pb2.TensorRequest.FromString,
                    response_serializer=grpc__communicator__old__pb2.DataBufferV0.SerializeToString,
            ),
            'GetWeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWeight,
                    request_deserializer=grpc__communicator__old__pb2.WeightRequest.FromString,
                    response_serializer=grpc__communicator__old__pb2.WeightResponse.SerializeToString,
            ),
            'SendLearningResults': grpc.stream_unary_rpc_method_handler(
                    servicer.SendLearningResults,
                    request_deserializer=grpc__communicator__old__pb2.DataBufferV0.FromString,
                    response_serializer=grpc__communicator__old__pb2.Acknowledgment.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GRPCCommunicatorV0', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GRPCCommunicatorV0(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCCommunicatorV0/GetJob',
            grpc__communicator__old__pb2.JobRequest.SerializeToString,
            grpc__communicator__old__pb2.JobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTensorRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/GRPCCommunicatorV0/GetTensorRecord',
            grpc__communicator__old__pb2.TensorRequest.SerializeToString,
            grpc__communicator__old__pb2.DataBufferV0.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCCommunicatorV0/GetWeight',
            grpc__communicator__old__pb2.WeightRequest.SerializeToString,
            grpc__communicator__old__pb2.WeightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendLearningResults(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/GRPCCommunicatorV0/SendLearningResults',
            grpc__communicator__old__pb2.DataBufferV0.SerializeToString,
            grpc__communicator__old__pb2.Acknowledgment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
